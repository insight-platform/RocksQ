from rocksq import StartPosition

class PersistentQueueWithCapacity:
    def __init__(self, path: str, max_elements: int = 1_000_000_000): ...

    def push(self, items: list[bytes], no_gil: bool = True): ...

    def pop(self, max_elements: int = 1, no_gil: bool = True) -> list[bytes]: ...

    @property
    def is_empty(self) -> bool: ...

    @property
    def disk_size(self) -> int: ...

    @property
    def payload_size(self) -> int: ...

    @property
    def len(self) -> int: ...

class MpmcQueue:
    def __init__(self, path: str, ttl: int): ...

    def add(self, items: list[bytes], no_gil: bool = True): ...

    def next(self, label: str, start_position: StartPosition, max_elements: int = 1, no_gil: bool = True) -> (list[bytes], bool): ...

    @property
    def is_empty(self) -> bool: ...

    @property
    def disk_size(self) -> int: ...

    @property
    def payload_size(self) -> int: ...

    @property
    def len(self) -> int: ...

    @property
    def labels(self): list[str]: ...

    def remove_label(self, label: str) -> bool: ...
